#!/bin/bash
# TODO: testar se está rodando com sudo


# Script de configuração automática do ambiente linux
# Se existe o grupo
if [ -z "$(grep "vboxsf" /etc/group)" ]; then
   echo "Configurando grupo do vboxsf..."
   sudo usermod -a -G vboxsf $USERNAME
fi
# Coloca permissão na montagem das pastas compartilhadas
if [ -d "/media" ]; then
   if ! [ -x "/media" ]; then
      echo "Atribuindo permissão nas pastas compartilhadas..."
      sudo chmod 777 /media
   fi
fi
# Identifica se tem /etc/bash.bashrc (ubuntu) ou /etc/bashrc (centos)
if [ -e "/etc/bash.bashrc" ] ; then
    BASHRC=/etc/bash.bashrc
else
    if [ -e "/etc/bashrc" ] ; then
      BASHRC=/etc/bashrc
    fi
fi
# Se ainda não tem o alias do cls configurado
if [ -z "$(grep "alias cls" $BASHRC)" ]; then
   echo "Configurando aliases no $BASHRC ..."
   # Se estiver rodando em WSL
   if [ "$(uname -r | grep -i Microsoft)" ]; then
      sudo echo "alias cls='tput reset; tput clear" >> $BASHRC
   else
      sudo echo "alias cls='tput reset'" >> $BASHRC
   fi
   sudo echo "alias lf='ls -F'" >> $BASHRC
   sudo echo "alias lt='ls -lrt'" >> $BASHRC
   sudo echo "alias ltr='ls -lt'" >> $BASHRC
   sudo echo "alias grep='grep --directories=skip --color=auto'" >> $BASHRC
   sudo echo "alias is='cd \$ISCOBOL'" >> $BASHRC
   sudo echo "alias iscs='cd \$ISCOBOL/sample;sh isControlset.sh &'" >> $BASHRC
   sudo echo "alias sb='cd /usr/local/bin'" >> $BASHRC
   sudo echo "alias s='cd /RECH/USR'" >> $BASHRC
   sudo echo "alias ctree='cd /usr/local/CtreeSQLServer/BASES/00571S004'" >> $BASHRC
   sudo echo "alias go='. godir'" >> $BASHRC
   sudo echo "alias ccat='pygmentize -g'" >> $BASHRC
fi
# Se ainda não tem a função do change_dir configurada
if [ -z "$(grep "change_dir" $BASHRC)" ]; then
   echo "Configurando change_dir ..."
   sudo echo "function change_dir() {" >> $BASHRC
   sudo echo "    cd \$1" >> $BASHRC
   sudo echo "}" >> $BASHRC
   sudo echo "export -f change_dir" >> $BASHRC
fi
# Se ainda não tem a configuração de completamento do bash
if [ -z "$(grep "completion-ignore-case" /etc/inputrc)" ]; then
   echo "Configurando tab completion..."
   sudo echo "TAB: menu-complete" >> /etc/inputrc
   sudo echo "set completion-ignore-case on" >> /etc/inputrc
   sudo echo "\"\e[Z\": \"\e-1\C-i\"" >> /etc/inputrc
fi
# Instalação do Git
if ! [ -x "$(command -v git)" ]; then
   echo "Instalando git..."
   if [ -f /etc/debian_version ]; then
      apt install -y git
   else
      dnf install -y git
   fi

   # TODO: Configurar usuário
   # git config --global user.name "Sandro Silveira"
   # git config --global user.email "sandrosilveira@gmail.com"

   # TODO: Configurar proxy
   # git config --global http.proxy http://192.168.1.254:3128
   # git config --global https.proxy https://192.168.1.254:3128
fi
# Instalação do Ruby
if ! [ -x "$(command -v ruby)" ]; then
   echo "Instalando ruby..."
   if [ -f /etc/debian_version ]; then
      apt install -y ruby
   else
      dnf install -y ruby
   fi
fi

# Se for uma distro com gnome
if [ -x "$(command -v gnome-shell)" ]; then
   # Se não tem o gnome tweks instalado
   if ! [ -x "$(command -v gnome-tweaks)" ]; then
      echo "Instalando gnome tweaks..."
      if [ -f /etc/debian_version ]; then
         apt install -y gnome-tweaks
      else
         dnf install -y gnome-tweaks
      fi
   fi
fi

# Instalação do pygmentize
if ! [ -x "$(command -v pygmentize)" ]; then
   echo "Instalando python-pygmentize..."
   if [ -f /etc/debian_version ]; then
      apt install -y python-pygments
   else
      dnf install -y python3-pygments
   fi
fi
# Instalação do NeoFetch
if ! [ -x "$(command -v neofetch)" ]; then
   echo "Instalando neofetch..."
   if [ -f /etc/debian_version ]; then
      apt install -y neofetch
   else
      curl -o /etc/yum.repos.d/konimex-neofetch-epel-7.repo https://copr.fedorainfracloud.org/coprs/konimex/neofetch/repo/epel-7/konimex-neofetch-epel-7.repo
      dnf install -y neofetch
   fi
fi
# Se for uma VM VirtualBox
if [ -z "$(dmesg | grep -i "DMI:.*VirtualBox")" ]; then
   echo "Ajustando timeout do grub..."
   # Ajusta o timeout do grub
   sudo sed -i 's/GRUB_TIMEOUT=[0-9]*/GRUB_TIMEOUT=0/g' /etc/default/grub
fi
# Outras instalações (na pasta de scripts do sistema)
cd /usr/local/bin
# Instalação do GnuCobol 3
if ! [ -x "$(command -v cobc)" ]; then
   wget https://raw.githubusercontent.com/sandrosilveira/benchmarks/master/install-gnucobol3 -O install-gnucobol3
   chmod 777 install-gnucobol3
   ./install-gnucobol3
fi
# Instalação do Java8 (OpenJdk) - TODO: Identificar se já tem java
# if ! [ -x "$(command -v java)" ]; then
#    wget https://raw.githubusercontent.com/sandrosilveira/benchmarks/master/install-java8 -O install-java8
#    chmod 777 install-java8
#    ./install-java8
# fi
# Instalação do 7zip
if ! [ -x "$(command -v 7za)" ]; then
   wget https://raw.githubusercontent.com/sandrosilveira/benchmarks/master/install-7zip -O install-7zip
   chmod 777 install-7zip
   ./install-7zip
fi
# Na Rech (identificar a disponibilidade do RECHINFO)
# # Instalação do cifs
# if ! [ -e "/sbin/mount.cifs" ] ; then
#    wget https://raw.githubusercontent.com/sandrosilveira/benchmarks/master/install-cifs -O install-cifs
#    chmod 777 install-cifs
#    ./install-cifs
# fi
# # Instalação do comando de montagem no f:
# if ! [ -x "$(command -v mountf)" ]; then
#    wget https://raw.githubusercontent.com/sandrosilveira/benchmarks/master/mountf -O mountf
#    chmod 777 mountf
# fi
# # Instalação do comando do pre-processador
# if ! [ -x "$(command -v preproc)" ]; then
#    wget https://raw.githubusercontent.com/sandrosilveira/benchmarks/master/preproc -O preproc
#    chmod 777 preproc
# fi
# Instalação dos scripts utilitários
apps="vars quebrapath md godir gnomeconf"
for app in $apps; do
   echo Instalando $app...
   cd /usr/local/bin
   sudo wget https://github.com/sandrosilveira/Linux/raw/master/$app -O $app
   sudo chmod 777 $app
done
